package managerclient;
import java.util.Vector;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import socketclient.SocketClient;



/**
 *
 * @author DELL
 */
public class Usermanager extends javax.swing.JPanel {
    String sql;
    SocketClient c;
    Vector<String> v_result;
	
	  // Variables declaration - do not modify
    
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb11;
    private javax.swing.JButton jb12;
    private javax.swing.JButton jb21;
    private javax.swing.JButton jb22;
    private javax.swing.JButton jb3_print;
    private javax.swing.JButton jb3_search;
    private javax.swing.JComboBox jcb;
    private javax.swing.JLabel jl1_userId;
    private javax.swing.JLabel jl1_username;
    private javax.swing.JLabel jl1_userpwd;
    private javax.swing.JLabel jl2_userId;
    private javax.swing.JLabel jl3;
    private javax.swing.JPanel jp1;
    private javax.swing.JPanel jp2;
    private javax.swing.JPanel jp_add;
    private javax.swing.JPanel jp_delete;
    private javax.swing.JPanel jp_search;
    private javax.swing.JSplitPane jsp;
    private javax.swing.JTable jt_search;
    private javax.swing.JTabbedPane jtabbedpanel;
    private javax.swing.JTextField jtf1_userId;
    private javax.swing.JTextField jtf1_username;
    private javax.swing.JTextField jtf1_userpwd;
    private javax.swing.JTextField jtf2_userId;
    private javax.swing.JTextField jtf_location;
    // End of variables declaration
	
   //自己添加的变量	 
    Vector <String> head ;
    Vector<Vector> data;
    DefaultTableModel dtm;
    
	/** Creates new form Usermanger */
    public Usermanager() {
    	initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jtabbedpanel = new javax.swing.JTabbedPane();
        jp_add = new javax.swing.JPanel();
        jl1_userId = new javax.swing.JLabel();
        jl1_username = new javax.swing.JLabel();
        jl1_userpwd = new javax.swing.JLabel();
        jb11 = new javax.swing.JButton();
        jb12 = new javax.swing.JButton();
        jtf1_userId = new javax.swing.JTextField();
        jtf1_username = new javax.swing.JTextField();
        jtf1_userpwd = new javax.swing.JTextField();
        jp_delete = new javax.swing.JPanel();
        jl2_userId = new javax.swing.JLabel();
        jtf2_userId = new javax.swing.JTextField();
        jb21 = new javax.swing.JButton();
        jb22 = new javax.swing.JButton();
        jp_search = new javax.swing.JPanel();
        jsp = new javax.swing.JSplitPane();
        jp1 = new javax.swing.JPanel();
        jcb = new javax.swing.JComboBox();
        jl3 = new javax.swing.JLabel();
        jb3_search = new javax.swing.JButton();
        jb3_print = new javax.swing.JButton();
        jp2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        //jt_search = new javax.swing.JTable();

        head = new Vector<String>();                         //设置表格头
        {head.add("用户号");
        head.add("用户名");
        head.add("密码");
        head.add("管辖地点");
        }
        data = new Vector<Vector>();                         //数据
        dtm = new DefaultTableModel(data,head);              //创建表格的模型
        jt_search = new javax.swing.JTable(dtm);                    //创建JTable的实例
        
        
        jl1_userId.setText("用户号;");

        jl1_username.setText("用户名：");

        jl1_userpwd.setText("密码：");
       
        //**************************************************
        JLabel jl_location = new JLabel("管辖地点:");
        jl_location.setBounds(10,180,50,22);
        jp_add.add(jl_location);
        jtf_location = new JTextField("");
        jtf_location.setBounds(80,180,490,22);
        jp_add.add(jtf_location);
        
        
        jb11.setText("确定");
        jb11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb11ActionPerformed(evt);
            }
        });

        jb12.setText("重置");
        jb12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb12ActionPerformed(evt);
            }
        });

        jtf1_userId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf1_userIdActionPerformed(evt);
            }
        });

        jtf1_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf1_usernameActionPerformed(evt);
            }
        });

        jtf1_userpwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf1_userpwdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_addLayout = new javax.swing.GroupLayout(jp_add);
        jp_add.setLayout(jp_addLayout);
        jp_addLayout.setHorizontalGroup(
            jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_addLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jb11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jb12)
                .addGap(173, 173, 173))
            .addGroup(jp_addLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl1_userpwd)
                    .addComponent(jl1_username)
                    .addComponent(jl1_userId))
                .addGap(18, 18, 18)
                .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf1_userId, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                    .addComponent(jtf1_userpwd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                    .addComponent(jtf1_username, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE))
                .addContainerGap())
        );
        jp_addLayout.setVerticalGroup(
            jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_addLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl1_userId)
                    .addComponent(jtf1_userId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl1_username)
                    .addComponent(jtf1_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_addLayout.createSequentialGroup()
                        .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jl1_userpwd)
                            .addComponent(jtf1_userpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(204, Short.MAX_VALUE))
                    .addGroup(jp_addLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addGroup(jp_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jb11)
                            .addComponent(jb12))
                        .addGap(134, 134, 134))))
        );

        jtabbedpanel.addTab("添加用户", jp_add);

        jl2_userId.setText("用户号：");

        jtf2_userId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf2_userIdActionPerformed(evt);
            }
        });

        jb21.setText("确定");
        jb21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb21ActionPerformed(evt);
            }
        });

        jb22.setText("重置");
        jb22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_deleteLayout = new javax.swing.GroupLayout(jp_delete);
        jp_delete.setLayout(jp_deleteLayout);
        jp_deleteLayout.setHorizontalGroup(
            jp_deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_deleteLayout.createSequentialGroup()
                .addGroup(jp_deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_deleteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jl2_userId)
                        .addGap(18, 18, 18)
                        .addComponent(jtf2_userId, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp_deleteLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jb21)
                        .addGap(86, 86, 86)
                        .addComponent(jb22)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jp_deleteLayout.setVerticalGroup(
            jp_deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_deleteLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jp_deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl2_userId)
                    .addComponent(jtf2_userId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addGroup(jp_deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb21)
                    .addComponent(jb22))
                .addGap(76, 76, 76))
        );

        jtabbedpanel.addTab("删除用户", jp_delete);

        jsp.setDividerLocation(80);
        jsp.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "查询所有用户" , "查询新增用户"}));
        jcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbActionPerformed(evt);
            }
        });

        jl3.setText("查询类型：");

        jb3_search.setText("查询");
        jb3_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb3_searchActionPerformed(evt);
            }
        });

        jb3_print.setText("打印");
        jb3_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb3_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp1Layout = new javax.swing.GroupLayout(jp1);
        jp1.setLayout(jp1Layout);
        jp1Layout.setHorizontalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jl3)
                .addGap(18, 18, 18)
                .addComponent(jcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jb3_search)
                .addGap(18, 18, 18)
                .addComponent(jb3_print)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jp1Layout.setVerticalGroup(
            jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl3)
                    .addComponent(jcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb3_search)
                    .addComponent(jb3_print))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jsp.setTopComponent(jp1);
        jScrollPane1.setViewportView(jt_search);

        javax.swing.GroupLayout jp2Layout = new javax.swing.GroupLayout(jp2);
        jp2.setLayout(jp2Layout);
        jp2Layout.setHorizontalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp2Layout.setVerticalGroup(
            jp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jsp.setRightComponent(jp2);

        javax.swing.GroupLayout jp_searchLayout = new javax.swing.GroupLayout(jp_search);
        jp_search.setLayout(jp_searchLayout);
        jp_searchLayout.setHorizontalGroup(
            jp_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsp)
        );
        jp_searchLayout.setVerticalGroup(
            jp_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_searchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jsp, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
        );

        jtabbedpanel.addTab("查询用户", jp_search);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabbedpanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabbedpanel)
        );
    }// </editor-fold>


    //增加用户界面 用户名输入文本框 响应事件
    private void jtf1_usernameActionPerformed(java.awt.event.ActionEvent evt) {                                     

         
    	// TODO add your handling code here:
    	jtf1_userpwd.requestFocus();
    	}                                             
    //增加用户界面 重置按钮响应事件
    private void jb12ActionPerformed(java.awt.event.ActionEvent evt) {                                     
    	// TODO add your handling code here:
    	jtf1_userId.setText("");
    	jtf1_username.setText("");
    	jtf1_userpwd.setText("");
    	}                                    
    //增加用户界面 用户号输入文本框 响应事件
    	private void jtf1_userIdActionPerformed(java.awt.event.ActionEvent evt) {                                   

         
    	jtf1_username.requestFocus();
    	    // TODO add your handling code here:
    	}                                           
    //增加用户界面 用户密码输入文本框 响应事件
    	private void jtf1_userpwdActionPerformed(java.awt.event.ActionEvent evt) {                                  

           
    	// TODO add your handling code here:
    	jb11.requestFocus();
    	}                                            
    //增加用户界面   确定 响应事件
    	private void jb11ActionPerformed(java.awt.event.ActionEvent evt) {                                     
    	// TODO add your handling code here:
    	//获取用户号
    	       String user_Id = jtf1_userId.getText().trim();

    	       //！！！！！！！！！！！用户号类型待改变！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
    	       String patternStr = "[0-9]{5}";
    	       if(user_Id.equals("")){
    		     JOptionPane.showMessageDialog(this, "用户号为空，请重新输入！！！","错误",	

JOptionPane.INFORMATION_MESSAGE);
    		     return;
    	        }
    	       if(!user_Id.matches(patternStr)){
    		      JOptionPane.showMessageDialog(this, "用户号必须为5位数字！！！","错误",	

JOptionPane.INFORMATION_MESSAGE);
    		      return;
    	        }
    	        //获取用户名
    	       String user_name = jtf1_username.getText().trim();
    	        if(user_name.equals("")){
    		       JOptionPane.showMessageDialog(this, "用户名为空，请重新输入！！！","错误",	

JOptionPane.INFORMATION_MESSAGE);
    		        return;
    	         }
    	        if(user_name.length() > 10){
    		      JOptionPane.showMessageDialog(this, "用户名太长，请检测是否正确！！！","错误",	

JOptionPane.INFORMATION_MESSAGE);
    		       return;
    	        }

    	       //获取用户密码
    	       String user_pwd = jtf1_userpwd.getText().trim();
    	       String patternStr_qwd = "[0-9]";
    	       if(user_pwd.equals("")){
    		     JOptionPane.showMessageDialog(this, "用户密码为空，请重新输入！！！","错误",	

JOptionPane.INFORMATION_MESSAGE);
    		     return;
    	        }
    	     /* if(!user_pwd.matches(patternStr)){
    		      JOptionPane.showMessageDialog(this, "用户密码必须字母或者数字！！！","错误",	JOptionPane.INFORMATION_MESSAGE);
    		      return;
    	        }*/
    	        
    	      String location = jtf_location.getText().trim();
    	       sql = "insert into superusers (user_Id,user_name,pwd,location) values " +
    	       		"('" + user_Id + "','" + user_name + "','" + user_pwd + "','"+location+"')";
    	System.out.println(sql);
    	int i = 0;
    	try {
    		  c = new SocketClient(sql);                           //实例化Client对象
    		  c.send();                                        //将sql语句发送给服务器端处理
    		  i = Integer.parseInt(c.getResult());
    		 } catch(Exception e){e.printStackTrace(); }  
    	if(i == 1){
    		JOptionPane.showMessageDialog(this, "添加用户成功！！","提示",JOptionPane.INFORMATION_MESSAGE);
    	}
    	else if (i!=1){
    		JOptionPane.showMessageDialog(this, "添加用户失败！！","错误",JOptionPane.INFORMATION_MESSAGE);
    	}

    	}
    	    

    	                                  
      //删除界面  用户号  文本框 响应事件
    	private void jtf2_userIdActionPerformed(java.awt.event.ActionEvent evt) {                                   

         
    	// TODO add your handling code here:
    	jb21.requestFocus();
    	}                                           
       //删除用户界面      确定  按钮响应事件
    	private void jb21ActionPerformed(java.awt.event.ActionEvent evt) { 
    	// TODO add your handling code here:
    		 String user2_id= jtf2_userId.getText().trim();
    	 sql = "delete from superusers where user_Id = '"+ user2_id+"'";
    	 int i = 0;
    	 try {
    		  c = new SocketClient(sql);                           //实例化Client对象
    		  c.send();                                        //将sql语句发送给服务器端处理
    		  i = Integer.parseInt(c.getResult());
    		 } catch(Exception e){e.printStackTrace(); }  
    		if(i == 1){
    			JOptionPane.showMessageDialog(this, "删除用户成功！！","提示",JOptionPane.INFORMATION_MESSAGE);
    		}
    		else if (i!=1){
    			JOptionPane.showMessageDialog(this, "删除用户失败！！","错误",JOptionPane.INFORMATION_MESSAGE);
    		}
    		
    		
    	}                                    
    	//删除用户界面      重置  按钮响应事件
    	private void jb22ActionPerformed(java.awt.event.ActionEvent evt) {                                     
    	// TODO add your handling code here:
    	jtf2_userId.setText("");
    	}                                    
        
                                   
       //更新页面  复选框 响应事件
    	private void jcbActionPerformed(java.awt.event.ActionEvent evt) {
    	// TODO add your handling code here:
    	jb3_search.requestFocus();
    	}
    	//更新页面  查询 按钮 响应事件
    	private void jb3_searchActionPerformed(java.awt.event.ActionEvent evt) {                                    
    		/*******************************************************************
    		 * 在每次提交时，先清空jTable
    		 * 清空jTable
    		 * *****************************************************************/
    	        int sum = dtm.getRowCount();
    	        for (int i = 0; i < sum; i++)
    	            dtm.removeRow(0);

        	sql = "select * from superusers";
        	Vector<String> v = null;
        	try {
        	  	  c = new SocketClient(sql,4);                           //实例化Client对象
        		  c.send();                                        //将sql语句发送给服务器端处理
        		  v_result = new Vector<String>();
        		  v_result = c.getV_result();
        		 } catch(Exception e){e.printStackTrace(); }                         //查询数据库
    	    int num =0;
    	    while(num<v_result.size()){
    	    	v = new Vector<String>();
    		  for(int j = 0;j < 4;j++){
    			  v.add(v_result.get(num));
    			num++;
    		  }	
    		  data.add(v);
    		  }                    
              if(data.size()==0){
                JOptionPane.showMessageDialog(this, "没有您要查询的设备信息！！","消息",JOptionPane.INFORMATION_MESSAGE);//弹出信息提示对话框
                return;
              }
               
                dtm.setDataVector(data, head);             //更新table
                jt_search.updateUI() ;                            //提示表格已更改
                jt_search.repaint();                              //重绘表格
  	
    	}
    	
    	
 //----------------------未实现----------------------------- 	
    	//更新页面  打印 按钮 响应事件
    	private void jb3_printActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println("执行打印功能");
    		//该功能尚未实现
    		
    		
    		
    		
    		
    		
    	}
 
    public static void main(String args[]) {
      
         
    	/* Create and display the form */
   	 
        JFrame jf = new JFrame();
        jf.setBounds(20,30,600,600);
        Usermanager um = new Usermanager();
        jf.add(um);
        jf.setVisible(true);

    }
}
