/*
 * 完成预定信息的查看功能
 * 其中 控件表格 是先在netbeans里画出，然后自己定义其模式
 * dtm = new DefaultTableModel(data,head);             //创建表格的模型
 * jt_pc = new javax.swing.JTable(dtm);
 * 6月19号
 * */




package managerclient;

import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

import socketclient.SocketClient;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OrderedInformation.java
 *
 * Created on 2012-6-18, 22:03:25
 */


/**
 *
 * @author DELL
 */
public class OrderedInformation extends javax.swing.JPanel {
	
	 /**
	 * 
	 */
	private static final long serialVersionUID = 717634263651876808L;
	 String sql;
	 SocketClient c;
	 Vector<String> v_result;
	
    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jt_display;
    private javax.swing.JTable jt_others;
    private javax.swing.JTable jt_pc;
    private javax.swing.JTabbedPane jtp;
    // End of variables declaration

    
    Vector <String> head ;
    Vector<Vector> data;
    DefaultTableModel dtm;

    /** Creates new form OrderedInformation */
    public OrderedInformation() {
    	initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jLabel1 = new javax.swing.JLabel();
        jtp = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();

        head = new Vector<String>();                         //设置表格头
        {
        head.add("自行车数量");
        head.add("预定人");
        head.add("预定时间");
        head.add("欲使用地点");}
        data = new Vector<Vector>();                         //数据
        dtm = new DefaultTableModel(data,head);              //创建表格的模型
        jt_pc = new javax.swing.JTable(dtm);                    //创建JTable的实例 
        jt_others = new javax.swing.JTable(dtm);                    //创建JTable的实例 
        jt_display = new javax.swing.JTable(dtm);                    //创建JTable的实例 
       
        
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel1.setFont(new java.awt.Font("幼圆", 1, 18)); // NOI18N
        jLabel1.setText("                    预定信息查询表");
        jSplitPane1.setTopComponent(jLabel1);

        
        jt_pc.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jt_pcAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jt_pc.setRowHeight(30);
        
        jScrollPane1.add(jt_pc);
        jScrollPane1.setViewportView(jt_pc);

        jtp.addTab("自行车预订信息", jScrollPane1);

        jt_display.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ancestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jt_display.setRowHeight(30);
        jScrollPane2.add(jt_display);
        jScrollPane2.setViewportView(jt_display);

       

        jt_others.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jt_othersAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jt_others.setRowHeight(30);
        jScrollPane3.add(jt_others);
        jScrollPane3.setViewportView(jt_others);

       

        jSplitPane1.setRightComponent(jtp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );
    }// </editor-fold>

int flag_order = 0;
String eqp_type;
private void jt_othersAncestorAdded(javax.swing.event.AncestorEvent evt) {
      flag_order = 3;
      eqp_type = "其它";
      action(sql);
	}

private void jt_pcAncestorAdded(javax.swing.event.AncestorEvent evt) {
	flag_order = 1;
	eqp_type = "自行车";
	action(sql);
	}


public void action(String sql){
	/*******************************************************************
	 * 在每次提交时，先清空jTable
	 * 清空jTable
	 * *****************************************************************/
        int sum = dtm.getRowCount();
        for (int i = 0; i < sum; i++)
            dtm.removeRow(0);
	
	sql = "select ordered_num.num,superusers.user_name,ordered_num.ordered_time,ordered_num.eqp_location from ordered_num,superusers where superusers.user_Id = ordered_num.super_user_Id AND eqp_type = '"+eqp_type + "'" ;            //拼接sql语句
 
	 try {
		 c = new SocketClient(sql,4);                           //实例化Client对象
		 c.send();                                        //将sql语句发送给服务器端处理
		 v_result = new Vector<String>();
		 v_result = c.getV_result();	                  //得到查询数据库后的结果
		} catch(Exception e){e.printStackTrace(); }                        //查询数据库
    System.out.println("v_result的值为：" + v_result);
		/*
		 * 将查询结果放在二维数组data里
		 * */
		int num = 0;
		while(num<v_result.size()){
			Vector<String> v = new Vector<String>();
			for(int i = 0;i<4;i++){
				v.add(v_result.get(num));
				num++;
			}
			data.add(v);
		}
		System.out.println("data的值为：" + data);
		/*
		 * 根据标准为flag_order的不同，更新jTable
		 * */
    if(flag_order == 1){
    	dtm.setDataVector(data, head);             //更新table
    	jt_pc.updateUI() ;                                      //提示表格已更改
    	jt_pc.repaint();  }                                     //重绘表格
    else if(flag_order == 2){
    	dtm.setDataVector(data, head);             //更新table
        jt_display.updateUI() ;                             //提示表格已更改
        jt_display.repaint();  }
    else if(flag_order == 3){
    	 dtm.setDataVector(data, head);             //更新table
        jt_others.updateUI() ;                              //提示表格已更改
        jt_others.repaint();  }
}
	
   public static void main (String args[]) {
    	JFrame jf = new JFrame();  
    	OrderedInformation ord_inf = new OrderedInformation();
    	jf.add(ord_inf);
    	jf.setBounds(10,10,600,600);
    	jf.setVisible(true);
    	
    }
}
