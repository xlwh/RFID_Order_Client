/*6月18号
 * 该程序完成：查询设备的功能
 * 查询设备分为：单件查询和批量查询
 * 尚未解决的问题：表格的删除266行
 * 
 * */

/* 9月3号
 * 该程序完成：查询设备的功能
 * 查询设备分为：单件查询和批量查询
 *              批量查询：地点（缺省，1406,1408,109）
 *                       设备类型（缺省，已借出设备，被预约设备，空闲，报修设备，报废设备）
 *                       设备类型（缺省，主机，显示器，其它）
 * 完成修改：1、在数据库里添加了一个设备类型表：完成设备类型号--设备类型名的解析               -------------------------- 待进一步修改，最好做到脱离程序可修改
 *           2、将使用地点存放在一个数组常量里，动态加载使用地点，便于程序的更新         
 *           3、动态加载设备类型，便于程序的更新升级，可扩展性           
 *       4、表格的清空           
 *
 * */





package managerclient;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchEquipment.java
 *
 * Created on 2012-5-14, 9:08:01
 */


import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import socketclient.SocketClient;


import commobject.LocationTypeArray;


/**
 *
 * @author DELL
 */
public class SearchEquipment extends javax.swing.JPanel  {

    /**
	 * 
	 */
	private static final long serialVersionUID = 351394077578565978L;
	/** Creates new form SearchEquipment */
	 String sql;
	 SocketClient c;
	 Vector<String> v_result;
	 
	
	 
    // Variables declaration - do not modify
    private javax.swing.ButtonGroup bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb;
    private javax.swing.JComboBox jcb1;
    private javax.swing.JComboBox jcb2;
    private javax.swing.JComboBox jcb3;
    private javax.swing.JPanel jl1;
    private javax.swing.JPanel jpt2;
    private javax.swing.JRadioButton jrb1;
    private javax.swing.JRadioButton jrb2;
    private javax.swing.JSplitPane jsp;
    
    //自己添加的变量	 
    Vector <String> head ;
    Vector<Vector> data;
    DefaultTableModel dtm;
    
   private javax.swing.JTable jt;
    private javax.swing.JTextField jtf1;
    // End of variables declaration
   
    
//构造器 
    public SearchEquipment() {
    	
    	initComponents();
    	
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
  
    //初始化页面方法
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() { 

        bg = new javax.swing.ButtonGroup();
        jsp = new javax.swing.JSplitPane();
        jl1 = new javax.swing.JPanel();
        jrb1 = new javax.swing.JRadioButton("",true);
        jrb2 = new javax.swing.JRadioButton();
        jcb1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcb2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jcb3 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jtf1 = new javax.swing.JTextField();
        jb = new javax.swing.JButton();
        jpt2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        
        
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
       
        //表格的设置
        head = new Vector<String>();                         //设置表格头
        {head.add("自行车序列号");
        head.add("自行车类型");
        head.add("自行车状态状态");
        head.add("地点");
        head.add("使用人");}
        data = new Vector<Vector>();                         //数据
        dtm = new DefaultTableModel(data,head);              //创建表格的模型
        jt = new javax.swing.JTable(dtm);                    //创建JTable的实例

        jsp.setDividerLocation(100);
        jsp.setDividerSize(4);
        jsp.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        bg.add(jrb1);
        jrb1.setText("批量查询");
        jrb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb1ActionPerformed(evt);
            }
        });

        bg.add(jrb2);
        jrb2.setText("单件查询");
        jrb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb2ActionPerformed(evt);
            }
        });

        //jcb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "缺省", "1406", "1408", "109" ,"ku"}));

        jLabel1.setText("地点：");

        jLabel2.setText("查询类型：");
       
        for(int i = 0;i <LocationTypeArray.location.length;i++){
    		jcb1.addItem(LocationTypeArray.location[i]);
    	}
    	for(int i = 0;i <LocationTypeArray.type.length;i++){
    		jcb3.addItem(LocationTypeArray.type[i]);
    	}

        jcb2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "缺省", "已借出设备", "空闲设备", "被报修设备", "已报废设备" }));

        jLabel3.setText("自行车类型类型：");

        jLabel4.setText("自行车序列号：");

        jb.setText("提交");
        jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jl1Layout = new javax.swing.GroupLayout(jl1);
        jl1.setLayout(jl1Layout);
        jl1Layout.setHorizontalGroup(
            jl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jl1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jl1Layout.createSequentialGroup()
                        .addComponent(jrb1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(jcb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(jcb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jl1Layout.createSequentialGroup()
                        .addComponent(jrb2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jtf1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcb3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jl1Layout.setVerticalGroup(
            jl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jl1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrb1)
                    .addComponent(jLabel1)
                    .addComponent(jcb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jcb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jcb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrb2)
                    .addComponent(jLabel4)
                    .addComponent(jtf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jsp.setTopComponent(jl1);

        jt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jt.setName("null"); // NOI18N
        jScrollPane1.setViewportView(jt);

        javax.swing.GroupLayout jpt2Layout = new javax.swing.GroupLayout(jpt2);
        jpt2.setLayout(jpt2Layout);
        jpt2Layout.setHorizontalGroup(
            jpt2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpt2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpt2Layout.setVerticalGroup(
            jpt2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpt2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jsp.setRightComponent(jpt2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsp, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsp, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );
    }
/*
 * 页面加载时的响应事件
 * LocationTypeArray类里有两个静态的数组
 *                                     location（存放设备的肯能使用地点）
 *                                     type(存放设备类型)
 * 当程序运行时，下拉框jcb1,jcb2动态加载内容                                    
 * */
private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {
	
	
	 }
	
 
    
private void jrb1ActionPerformed(java.awt.event.ActionEvent evt) {
    jtf1.setEditable(false);    //单件查询所涉及到的文本框设为不可编辑
}

private void jrb2ActionPerformed(java.awt.event.ActionEvent evt) {
     jtf1.setEditable(true);    //单件查询所涉及到的文本框设为可编辑
     jtf1.requestFocus();       //文本框得到输入焦点
     jcb1.setEditable(false);
     jcb2.setEditable(false);
     jcb3.setEditable(false);
     
     jt.selectAll();            //表格的删除功能      --------  未成功
     jt.clearSelection();       //选择所有，然后clear
}

//提交事件处理
private void jbActionPerformed(java.awt.event.ActionEvent evt) {
	
	/*******************************************************************
	 * 在每次提交时，先清空jTable
	 * 清空jTable
	 * *****************************************************************/
        int sum = dtm.getRowCount();
        for (int i = 0; i < sum; i++)
            dtm.removeRow(0);

	
	//一、批量查询事件处理
	if(jrb1.isSelected())
{   String str11=null,str12=null,str13=null;String str14 = null;
    String str21 = null;               //存储“设备地点”的查询条件
    String str22 = null;               //存储”查询类型“的查询条件
    String str23 = null;               //存储“设备类型”的查询条件
   
       //--------------------”设备地点“查询条件解析---------
       int i = jcb1.getSelectedIndex() ;
    	if (i == 0) {str11 = "南邮校内";str12 = "南邮校外";str13 = "南邮校内+校外";str14 = "其他";}
    	else{str11 = str12 = str13 = str14= (String) jcb1.getSelectedItem();
        }
    
      //----------------------”设备类型“的查询条件解析--------------------
       int j = jcb3.getSelectedIndex();
       if(j == 0){str21 = "自行车";str23 ="其它";}
       else{str21 = str22 = str23 = (String) jcb3.getSelectedItem(); }
       
      //--------------------”查询类型“查询条件解析同时拼接sql语句-------------
       int k = jcb2.getSelectedIndex();
       if(k == 0){
            sql = "select DISTINCT a.eqp_Id ," + //拼接sql语句，1.设备序列号
            "b.eqp_type," +                      //2.设备类型
	 		"a.eqp_borrowed_sign," +             //3.借出标志位
	 		"a.eqp_mend_sign," +                 //4.维修标志位
	 		"a.eqp_abandon_sign ," +             //5.报废标志位
	 		"a.eqp_location," +                  //6.地点
	 	    "c.user_name " +                     //7.使用者
	 	    "from storage a inner join  equipment b " +
	 	    "on a.eqp_Id = b.eqp_Id AND a.eqp_location In ( '"+ str11 + "','"+str12+"','"+str13+"','"+str14+"')" +
	 	    		"AND b.eqp_type In ( '"+ str21 + "','"+str22+"','"+str23+"')" + "left join view_borrowed c ON c.eqp_Id = a.eqp_Id " ;  
System.out.println(sql);
        }
       
       else if(k == 1){
    	   sql = "select DISTINCT a.eqp_Id ," + //拼接sql语句，1.设备序列号
           "b.eqp_type," +                      //2.设备类型
	 		"a.eqp_borrowed_sign," +             //3.借出标志位
	 		"a.eqp_mend_sign," +                 //4.维修标志位
	 		"a.eqp_abandon_sign ," +             //5.报废标志位
	 		"a.eqp_location," +                  //6.地点
	 	    "c.user_name " +                     //7.使用者
	 	    "from storage a inner join  equipment b " +
	 	    "on a.eqp_Id = b.eqp_Id AND a.eqp_location In ( '"+ str11 + "','"+str12+"','"+str13+"','"+str14+"')" +
	 	    		"AND b.eqp_type In ( '"+ str21 + "','"+str22+"','"+str23+"')" + "And a.eqp_borrowed_sign ='1'"+"left join view_borrowed c ON c.eqp_Id = a.eqp_Id " ;
       }
  
       else if(k == 2){
    	   sql = "select DISTINCT a.eqp_Id ," + //拼接sql语句，1.设备序列号
           "b.eqp_type," +                      //2.设备类型
	 		"a.eqp_borrowed_sign," +             //3.借出标志位
	 		"a.eqp_mend_sign," +                 //4.维修标志位
	 		"a.eqp_abandon_sign ," +             //5.报废标志位
	 		"a.eqp_location," +                  //6.地点
	 	    "c.user_name " +                     //7.使用者
	 	    "from storage a inner join  equipment b " +
	 	    "on a.eqp_Id = b.eqp_Id AND a.eqp_location In ( '"+ str11 + "','"+str12+"','"+str13+"','"+str14+"')" +
	 	    		"AND b.eqp_type In ( '"+ str21 + "','"+str22+"','"+str23+"')" +
	 	    		"AND a.eqp_borrowed_sign ='0'And a.eqp_mend_sign = '0' AND a.eqp_abandon_sign = '0'" +
	 	    		"left join view_borrowed c ON c.eqp_Id = a.eqp_Id " ;
       }
       else if(k == 3){
    	   sql = "select DISTINCT a.eqp_Id ," + //拼接sql语句，1.设备序列号
           "b.eqp_type," +                      //2.设备类型
	 		"a.eqp_borrowed_sign," +             //3.借出标志位
	 		"a.eqp_mend_sign," +                 //4.维修标志位
	 		"a.eqp_abandon_sign ," +             //5.报废标志位
	 		"a.eqp_location," +                  //6.地点
	 	    "c.user_name " +                     //7.使用者
	 	    "from storage a inner join  equipment b " +
	 	    "on a.eqp_Id = b.eqp_Id AND a.eqp_location In ( '"+ str11 + "','"+str12+"','"+str13+"','"+str14+"')" +
	 	    		"AND b.eqp_type In ( '"+ str21 + "','"+str22+"','"+str23+"')" + 
	 	    		"AND a.eqp_mend_sign ='1'" +
	 	    		"left join view_borrowed c ON c.eqp_Id = a.eqp_Id "  ;
	 		 
       }
       else if(k == 4){
    	   sql = "select DISTINCT a.eqp_Id ," + //拼接sql语句，1.设备序列号
           "b.eqp_type," +                      //2.设备类型
	 		"a.eqp_borrowed_sign," +             //3.借出标志位
	 		"a.eqp_mend_sign," +                 //4.维修标志位
	 		"a.eqp_abandon_sign ," +             //5.报废标志位
	 		"a.eqp_location," +                  //6.地点
	 	    "c.user_name " +                     //7.使用者
	 	    "from storage a inner join  equipment b " +
	 	    "on a.eqp_Id = b.eqp_Id AND a.eqp_location In ( '"+ str11 + "','"+str12+"','"+str13+"','"+str14+"')" +
	 	    		"AND b.eqp_type In ( '"+ str21 + "','"+str22+"','"+str23+"')" + 
	 	    		"AND a.eqp_abandon_sign ='1'"+ 
	 	    		"left join view_borrowed c ON c.eqp_Id = a.eqp_Id " ;
       }
	
}
   
    

    //二、单件查询事件处理
    if(jrb2.isSelected()){
    	String str = jtf1.getText().trim();            //得到文本框的内容
    	if(str.equals("")){                            //查询条件为空
    		 JOptionPane.showMessageDialog(this, "查询条件为空，请输入必要的查询信息!!!","消息",JOptionPane.INFORMATION_MESSAGE);
    	}
    	else if(!str.equals("")){
    		 sql = "select storage.eqp_Id ," +             //拼接sql语句，1.设备
 	 		"equipment.eqp_type," +                    //2.设备类型
 	 		"storage.eqp_borrowed_sign," +             //3.借出标志位
 	 		"storage.eqp_mend_sign," +                 //4.维修标志位
 	 		"storage.eqp_abandon_sign ," +             //5.报废标志位
 	 		"storage.eqp_location," +                  //6.地点
 	 		"view_borrowed.user_name " +                     //7.使用人姓名
 	 		"from storage ,equipment,view_borrowed " +
 	 		"where storage.eqp_Id = equipment.eqp_Id AND equipment.eqp_Id = view_borrowed.eqp_Id AND storage.eqp_Id = '" + str +"'";
    		 }
    }
    //数据库操作以及表格的生成
    try {
		 c = new SocketClient(sql,7);                           //实例化Client对象
		 c.send();                                        //将sql语句发送给服务器端处理
		 v_result = new Vector<String>();
		 v_result = c.getV_result();	                  //得到查询数据库后的结果
		} catch(Exception e){e.printStackTrace(); }                        //查询数据库
        
		/*
		 * 将信息在jTable里显示
		 * 注意设备状态一栏要通过解析一下
		 * */
		Vector<String> v = null;
	    int num =0;
	    while(num<v_result.size()){
	    	String state = "在库状态";
	    	v = new Vector<String>();
		  for(int j = 0;j < 7;j++){
			  
			if(j<2){v.add(v_result.get(num));}
			else if (j==2){if(v_result.get(num).equals("1")) { state = "借出状态";}} //借出标准位为1时在state为借出状态 
			else if (j==3){if(v_result.get(num).equals("1")) {state = "报修状态";}} //维修标志位为1时在state为维修状态 
			else if (j==4){ if(v_result.get(num).equals("1")) {state = "报废状态";}v.add(state); }    //报废标志位为1时在state为报废状态
			else {v.add(v_result.get(num));}
			num++;
		  }	
		  data.add(v);
		  }
	    dtm.setDataVector(data, head);             		//更新table
	    jt.updateUI() ;                    //提示表格已更改
	    jt.repaint();                      //重绘表格
		
    	
}

    
    public static void main(String args[]) {
    	JFrame jf = new JFrame();
    	SearchEquipment seqp = new SearchEquipment();
    	jf.add(seqp);
    	jf.setBounds(10,10,600,600);
    	jf.setVisible(true);
  
    	
    }
    
    
    
}
