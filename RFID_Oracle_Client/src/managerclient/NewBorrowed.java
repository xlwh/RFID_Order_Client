/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewBorrowed.java
 *
 * Created on 2012-6-30, 9:45:54
 */
package managerclient;

import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import socketclient.SocketClient;


/**
 *
 * @author DELL
 */
public class NewBorrowed extends javax.swing.JFrame {
	
	String sql;
	SocketClient c;
	Vector<String> v_result;
	
	String str_eqp_type = null;        							 //借用设备的类型
    String str_location = null;        							 //使用地点
    int int_num = 0;                    						 //借用数量
    String borrowed_time_newborrowed = null;        			 //借出时间
    Vector<String> v_eqp_Id;
    String userid = null;
    
    Vector <String> head;
     Vector<Vector> data;
    DefaultTableModel dtm;
    
    /** Creates new form NewBorrowed */
    public NewBorrowed(String userid) {
        this.userid = userid;
    	
    	initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
   private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcb_type = new javax.swing.JComboBox();
        jcb_location = new javax.swing.JComboBox();
        jtf_num = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jb_new_ok = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_list = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("幼圆", 1, 18));
        jLabel1.setText("自行车借用登记");

        jLabel2.setText("自行车类型类型：");

        jLabel3.setText("使用地点：");

        jLabel4.setText("数量：");

        jcb_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "自行车",  "其它" }));

        jcb_location.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "南邮校内","校外","校内+校外" }));

        jb_new_ok.setText("确定");
        jb_new_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_new_okActionPerformed(evt);
            }
        });

        JButton jb_back = new JButton("返回");
        jb_back.setBounds(640,65,60,28);
        this.add(jb_back);
        
        jb_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jb_backActionPerformed(evt);
            }
        });
        
        head = new Vector<String>();                         //设置表格头
        {head.add("自行车序列号");
        }
        //data= new Vector<Vector>();                         //数据
        dtm= new DefaultTableModel(data,head);              //创建表格的模型
        jt_list = new javax.swing.JTable(dtm);               
        jt_list.setRowHeight(30);
        jScrollPane1.setViewportView(jt_list);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_type, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_location, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtf_num, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jb_new_ok)
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel1)
                .addContainerGap(273, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jcb_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcb_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jtf_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jb_new_ok))
                .addGap(27, 27, 27)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    /*
     * 说明：返回按键处理事件
     * 功能：当按下“返回”按键后窗口关闭
     * */
    private void jb_backActionPerformed(java.awt.event.ActionEvent evt) {

    this.setVisible(false);
    	
    }
      /*
       * 说明：确定按钮处理事件
       * 功能：按确定按键按下后，模拟设备的借出过程，
       *       将从数据库里查出的满足条件的设备序列号显示在jTable 里
       */
private void jb_new_okActionPerformed(java.awt.event.ActionEvent evt) {  
	 v_eqp_Id = new Vector<String>();
	 data = new Vector<Vector>();
	 /*----------------------------------------------------------------------------
     * 模拟实际中设备的借用过程
     * 实际操作中借用者向管理员口述借用设备的条件
     * 然后管理员从仓库中取出设备  ，用读写器直接读取设备的信息
     * 
     * 该模块只完成查询设备序列号的功能
     * -----------------------------------------------------------------------------*/
	  int flag = 0;
	      
	       //-------------得到设备借出的时间--------------------
	        Date now ;
            DateFormat d1 = DateFormat.getDateInstance();
            now = new Date(); 
            borrowed_time_newborrowed = d1.format(now);				    //得到设备的借出时间 
      
            str_eqp_type = (String) jcb_type.getSelectedItem();         //得到设备类型
       
            str_location = (String) jcb_location.getSelectedItem(); 	//得到设备使用地点
        
            int_num = Integer.parseInt(jtf_num.getText());				//得到借用设备数量
            
            int row = int_num + 1;
            sql = "select rownum rn,eqp_Id from View_EquipmentBorrowed_ReadEqp where eqp_type = '"+str_eqp_type+"' AND rownum <" + row;
            try {
	       		 c = new SocketClient(sql,2);                           //实例化Client对象
	       		 c.send();                                        //将sql语句发送给服务器端处理
	       		v_result = new Vector<String>();
	       		v_result = c.getV_result();                       //得到查询数据库后的结果
	       		} catch(Exception e){e.printStackTrace(); }       //查询数据库
	       		
	       		Vector<String> v;
	       		for (int i = 0;i < v_result.size();i++){
	       			v = new Vector<String>();
	       			if(i%2 == 1){
	       				v_eqp_Id.add(v_result.get(i));
	       				v.add(v_result.get(i));
	       			  data.add(v);}
	       		}
System.out.println("根据预定数量找到的自行车为：" +data);
          /*------------------------------------------------------------------
           * 如果库存不足则显示提示窗口
           * 否则 将查到的设备序列号在列表中显示出来
           * 其中flag为库存是否不足的标志位
           *------------------------------------------------------------------ */
            if(data.size()<int_num){flag = 0;}          		//判断是否借出指定数目的设备
            else if (data.size()==int_num){flag = 1;}
            if(flag == 1){
             dtm.setDataVector(data, head);             		//更新table
             jt_list.updateUI() ;                            	//提示表格已更改
             jt_list.repaint();									//重绘表格}
            }                             
            if(flag == 0){JOptionPane.showMessageDialog(this, "库存自行车数量不足！！","消息",JOptionPane.INFORMATION_MESSAGE);//弹出信息提示对话框
        	return;}
        /*
            --------------------------------------------------------------
             * 当设备借出时
             * 此时需将相应的设备添加到borrowed的表中，做得实时更新数据库
             * 所用参数为：vector_eqp_Id(设备序列号数组)
             *            userid(用户号)
             *            username(用户名)
             *            borrowed_time_newborrowed(借出时间)
             *            str_eqp_type(设备类型)
             *            str_location(使用地点)
            ----------------------------------------------------------------
            for(int j = 0;j<vector_eqp_Id.size();j++){
              sql = "insert ignore into borrowed(eqp_Id,user_Id,user_name,borrowed_time,eqp_type,location) " +
              		" values ('" + vector_eqp_Id.get(j).get(0) + "','" 
              		+userid+"','"+username+"','"+borrowed_time_newborrowed+"','"+str_eqp_type+"','"+str_location+"');";
              try {
                   	db = new Database(host);                          //创建数据库类对象
                   	sql = new String(sql.getBytes(),"ISO-8859-1");    //转码
                  } catch(Exception e){e.printStackTrace(); }
                       db.updateDB(sql);                                  //更新数据库
             }*/
            
            
}                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	NewBorrowed seqp = new NewBorrowed("1221101");
    	seqp.setBounds(10,10,700,600);
    	seqp.setVisible(true);
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jb_new_ok;
    private javax.swing.JComboBox jcb_location;
    private javax.swing.JComboBox jcb_type;
    private javax.swing.JTable jt_list;
    private javax.swing.JTextField jtf_num;
    // End of variables declaration
}
