/*
 * 解决了左连接或右连接时      某属性为空的问题
 *     **改程序中因为是在服务器端处理的，返回值为String型，故 空null 转换成了"null" 
 *     **要用	if(!v_result.get(num).equals("null")){}
 *     **及此时的空为字符串“null”，而非传统的为空
 */
package superuserclient;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.util.Date;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import socketclient.SocketClient;




/**
 *
 * @author DELL
 */
public class MyEquipment extends javax.swing.JPanel {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 6174620802837869280L;
	private String userId;
    private String sql;
    SocketClient c;
    Vector<String> v_result;        // 存放数据库操作后的结果
    

	
	
	//自己添加表格变量	 
    Vector <String> head ;
    Vector<Vector> data;
    DefaultTableModel dtm;

    /** Creates new form MyEquipment */
    public MyEquipment(String userId) {
    	this.userId = userId;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        JScrollPanel1 = new javax.swing.JScrollPane();
        jt = new javax.swing.JTable();
        jp_button = new javax.swing.JPanel();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("幼圆", 1, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("我的自行车");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("借用条件：1、没有逾期未还自行车");

        jLabel3.setText("2、剩余使用时间<=3天");

        jSplitPane1.setDividerLocation(470);

      //表格的设置
        head = new Vector<String>();                         //设置表格头
        {head.add("自行车序列号");
        head.add("自行车类型类型");
        head.add("使用地点");
        head.add("设备状态");
        head.add("剩余使用时间(天)");
        }
        data = new Vector<Vector>();                         //数据
        dtm = new DefaultTableModel(data,head);              //创建表格的模型
        jt = new javax.swing.JTable(dtm);                    //创建JTable的实例
        
        jt.setRowHeight(30);
        
        
        JScrollPanel1.setViewportView(jt);

        jSplitPane1.setLeftComponent(JScrollPanel1);

        javax.swing.GroupLayout jp_buttonLayout = new javax.swing.GroupLayout(jp_button);
        jp_button.setLayout(jp_buttonLayout);
        jp_buttonLayout.setHorizontalGroup(
            jp_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 131, Short.MAX_VALUE)
        );
        jp_buttonLayout.setVerticalGroup(
            jp_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 509, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jp_button);

        jScrollPane1.setViewportView(jSplitPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(19, 19, 19))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    
long time;                         //设备剩余使用时间
int count_borrowed;                //已借设备计数器，记录用户已经借的设备
String str_now;                    //现在的时间
Vector<String> v_eqp_Id ;
Vector<String> v_daysLeft ;                //存放每个设备的剩余使用时间
Vector<String> v_state  ;                  //存放每个设备的状态：使用中，待维修，维修中，维修完成，报废
private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded

	/*******************************************************************
	 * 在每次提交时，先清空jTable
	 * 清空jTable
	 * *****************************************************************/
        int sum = dtm.getRowCount();
        for (int j = 0; j < sum; j++)
        	dtm.removeRow(0);
        int sum_ordered = dtm.getRowCount();
        for (int j = 0; j < sum_ordered; j++)
        	dtm.removeRow(0);
	
	count_borrowed=0;
	str_now = null;                 //现在的时间
	v_eqp_Id = new Vector<String>();
	v_daysLeft= new Vector<String>();
	v_state =new Vector<String>();
	 //........................获取当前时间点............................
    Date now ;
    DateFormat d = DateFormat.getDateInstance();
    now = new Date();                                   
    str_now = d.format(now); 
   
   /************************************************************************************
    * 查询出该用户的已借设备
    * 将已借设备信息显示（序列号、设备类型、设备使用地点、设备状态、剩余使用时间）
    *  难点：剩余时间的计算 ------将所有设备的剩余使用时间存放在数组V_daysLeft里,以方便判断是否有设备预期未还
    *          
    *       设备状态的查询语句              
    * ***********************************************************************************/
    sql = "select b.eqp_Id," +                        //序列号
    		"e.eqp_type," +                           //设备型号
    		"b.eqp_location," +                           //使用地点
    		"m.mend_sign," +                                   //为修标志位
    		"b.borrowed_time " +                      //借出时间
    		"from borrowed b left join  equipment e on e.eqp_Id = b.eqp_Id" +
    		" left join mend m on b.eqp_Id = m.eqp_Id And b.super_user_Id = '" + userId+"'";
	try {
		 c = new SocketClient(sql,5);                           //实例化Client对象
		 c.send();                                        //将sql语句发送给服务器端处理
		 v_result = new Vector<String>();
		 v_result = c.getV_result();	                  //得到查询数据库后的结果
		} catch(Exception e){e.printStackTrace(); }
System.out.println("v_result 的结果为：" + v_result);
	
    Vector<String> v = null;
	int num =0;
	    while(num<v_result.size()){
	      v = new Vector<String>();
		  for(int j = 0;j < 5;j++){
			if(j==0){
				 v.add(v_result.get(num));
				 v_eqp_Id.add(v_result.get(num));
                    }
			else if(j<3){v.add(v_result.get(num));}
			else if(j==3) {                                //若为第3列，维修状态为
				try{
					if(!v_result.get(num).equals("null")){
						try{
						int state = Integer.parseInt(v_result.get(num));
						v_state.add(v_result.get(num));
						switch(state) 
						{
						case 0 :v.add("待维修...") ;break;
						case 1 :v.add("维修状态") ;break;
						case 2 :v.add("维修成功") ;break;
						case 3 :v.add("报废，请归库") ;break;
						}
						}catch(Exception e){}
					}
					else {
						   v_state.add(v_result.get(num));
					       v.add("正常使用");}
	 			}catch(Exception e){e.printStackTrace();} 
			}
			else if(j==4){
				 String str_borrowedtime = v_result.get(num);
			        String day = null;                        //设备借用剩余时间
		          try
		          	{
		        	 Date data_borrowed = d.parse(str_borrowedtime);
		        	 Date d_now = d.parse(str_now);
		        	 long diff = d_now.getTime() - data_borrowed.getTime();
		        	 time = diff / (1000 * 60 * 60 * 24);
		        	 time = 60 - (time);
		        	 day = String.valueOf(time);            
		          	}catch (Exception e){}
		          	v.add(day);
		          	v_daysLeft.add(day);
			   }
			num++;
		  }	
		  data.add(v);
		  renowButton(count_borrowed);
		  count_borrowed ++;
		  }
	    dtm.setDataVector(data, head);             		//更新table
	    jt.updateUI() ;                    //提示表格已更改
	    jt.repaint();                      //重绘表格
    
}





/************************************************************************
 * 为每已借信息生成相应的   1.续借  按钮  2.报修按钮
 * 1、 续借：
 *     为没个续借按钮添加相应的响应事件，
 *     有预期没还设备，则该用户无法续借
 *     当设备剩余使用时间小于等于3天时可以续借,否则不可以续借
 *     当按键按下后，数据库要更新
 * 2、报修：
 * 	       按下报修按键后，进入    ”报修信息验证页面” 
 *                         若信息无误，则可点击按钮确认报修
 *                         有误，可返回原页面
 *                         	    
 * **********************************************************************/

    public void renowButton(final int i ){
    	final JButton jb_renew = new JButton("续借");
    	final JButton jb_mend = new JButton("报修");
    	jb_renew.setBounds(0,18+30*i,60,30);
    	jb_mend.setBounds(60,18+30*i,60,30);
    	jp_button.add(jb_renew);
    	jp_button.add(jb_mend);
    	jb_mend.setEnabled(false);
    	int flog = 0;                         //标志是否有预期未还设备
    	/*
    	 * 若用户的设备剩余使用天数有一个或一个以上小于0时
    	 * 则该用户没有设备的续借权限
    	 * */
    	for(int j = 0;j<v_daysLeft.size();j++){
    		if(Integer.parseInt((String)v_daysLeft.get(j))<0){
    			flog = 1;
    		}
    	}
    	if (flog == 1){
    		jb_renew.setEnabled(false);
    	} 
    	if(v_state.get(i).equals("null")){jb_mend.setEnabled(true);}
    	
    	//“续借”按键  响应事件
    	jb_renew.addActionListener(new ActionListener(){                      
	        public void actionPerformed(ActionEvent event){
	        	/*--------------------------------------------------------
	        	 * 若剩余使用时间大于3天则不可以续借，并显示提示信息
	        	 * 若剩余使用时间小于3则可以续借：
	        	 * 续借时先将数据库的对应的数据更新，然后更新表单jt
	        	 *-----------------------------------------------------*/
	        	if (Integer.parseInt((String) v_daysLeft.get(i)) >3){
	        		JOptionPane.showMessageDialog(jp_button, "该自行车还不能续借！！！","消息",
	        				JOptionPane.INFORMATION_MESSAGE);//弹出信息提示对话框
	            	return;}
	        	else {
	        		jt.setValueAt(60, i, 4);                                   //更新表单数据
	        		String sql = "update borrowed set borrowed_time = to_date('" + str_now +"','yyyy-mm-dd')" +"where eqp_Id = '"+v_eqp_Id.get(i)+"'";
	        		try {
	        			 c = new SocketClient(sql);                             //实例化Client对象
	        			 c.send();                                        //将sql语句发送给服务器端处理
	        			 int i = Integer.parseInt(c.getResult());
	        			 if(i!=0){JOptionPane.showMessageDialog(jp_button, "续借成功！！！","消息",
	 	        				JOptionPane.INFORMATION_MESSAGE);//弹出信息提示对话框
	 	            	return;}
	        			} catch(Exception e){e.printStackTrace(); }
	        	}    
	        }});
    	
    	
    	//“报修”按键  响应事件
    	jb_mend.addActionListener(new ActionListener(){                      
	        public void actionPerformed(ActionEvent event){
	            NewMend newmend = new NewMend(userId,v_eqp_Id.get(i));
	            newmend.setBounds(50,100,420,500);
	            newmend.setVisible(true);
	        	
	        }});
	        
    	  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel jp_button;
    private javax.swing.JTable jt;

    public static void main(String args[]){
    	
    	JFrame jf = new JFrame();
    	MyEquipment seqp = new MyEquipment("1221101");
    	jf.add(seqp);
    	jf.setBounds(10,10,650,650);
    	jf.setVisible(true);
    	
    }

}
