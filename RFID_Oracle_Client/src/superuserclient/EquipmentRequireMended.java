/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EquipmentRequiredMended.java
 *
 * Created on 2012-9-7, 20:30:23
 */
package superuserclient;


import java.text.DateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import socketclient.SocketClient;


/**
 *
 * @author DELL
 */
public class EquipmentRequireMended extends javax.swing.JPanel {
    
    /**
	 * 
	 */
	private static final long serialVersionUID = -4881435293085041892L;
	String sql;
    String userId;
    SocketClient c;
    String str_eqpType;                            //存放当前被选设备的设备类型
    String str_eqpLocation;                        //存放当前被选设备的设备使用地点
    String str_eqpId;                              //存放当前被选设备的设备序列号

    /** Creates new form EquipmentRequiredMended */
    public EquipmentRequireMended(String userId) {
        this.userId = userId;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcb_eqp_Id = new javax.swing.JComboBox();
        jtf_eqp_type = new javax.swing.JTextField();
        jtf_location = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta_reason = new javax.swing.JTextArea();
        jb_ok = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jb_know = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        
        jtf_eqp_type.setEditable(false);
        jtf_location.setEditable(false);
        
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("幼圆", 1, 14)); // NOI18N
        jLabel1.setText("我要报修：");

        jLabel2.setText("序列号：");

        jLabel3.setText("设备类型：");

        jLabel4.setText("使用地点：");

        jLabel5.setText("报修原因：");

        jcb_eqp_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_eqp_IdActionPerformed(evt);
            }
        });

        jta_reason.setColumns(20);
        jta_reason.setRows(5);
        jScrollPane1.setViewportView(jta_reason);

        jb_ok.setText("确定");
        jb_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_okActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("幼圆", 1, 14)); // NOI18N
        jLabel6.setText("我报修的设备：");

        jb_know.setText("我知道了");
        jb_know.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_knowActionPerformed(evt);
            }
        });

        jt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "序列号", "设备类型", "使用地点", "报修时间", "报修原因", "维修状态"
            }
        ));
        jt.setRowHeight(20);
        jScrollPane2.setViewportView(jt);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jcb_eqp_Id, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jtf_eqp_type, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jtf_location, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jb_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                                .addComponent(jb_know)
                                .addGap(48, 48, 48)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_eqp_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtf_eqp_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jb_ok)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jb_know))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );
    }
    


private void jb_okActionPerformed(java.awt.event.ActionEvent evt) {
	                   
	String str_reason = jta_reason.getText().trim();//报修原因
	
	
	//........................获取点击处理按键的时间点............................
    Date now ;
    DateFormat d1 = DateFormat.getDateInstance();
    now = new Date(); 
    String str_now = d1.format(now); 

   
    /***********************************************************************
     * 将报修设备的信息添加进数据库
     * 一：将设备信息insert into mend表
     * 二：更新storage 表
     **********************************************************************/
   
    sql = "insert into mend(eqp_Id,super_user_Id,mend_time,mend_reason) values('"+str_eqpId+"','"+userId+"',to_date('"+str_now+"','yyyy-mm-dd'),'"+str_reason+"')";
    try {
   	 c = new SocketClient(sql);                            //实例化Client对象
   	 c.send();                                        //将sql语句发送给服务器端处理
   	} catch(Exception e){e.printStackTrace(); }
    if(Integer.parseInt(c.result) !=0){
	    //更新表格jt
	    v_jtResult.add(str_eqpId);
	    v_jtResult.add(str_eqpType);
	    v_jtResult.add(str_eqpLocation);
	    v_jtResult.add(str_now);
	    v_jtResult.add(str_reason);
	    v_jtResult.add("0");
	    
	    int rowCount = 0;
	    int count =0;
		String data[][]= new String[v_jtResult.size()/6][6];
		  while(count<v_jtResult.size()){
		 	for(int j = 0;j < 6;j++){
		 		if(j!=5){data[rowCount][j] = v_jtResult.get(count);}
		 		else{
		 			int state = Integer.parseInt(v_jtResult.get(count));
		 			switch(state) {
		 			case 0 :data[rowCount][j] = "待维修...";break;
		 			case 1 :data[rowCount][j] = "维修状态";break;
		 			case 2 :data[rowCount][j] = "维修成功";break;
		 			case 3 :data[rowCount][j] = "报废，请归库";break;} 
		 			}
		 		count++;	
		 		  }
		 	rowCount++;
		  }

	  
	   //更新表单
	   jt.setModel(new javax.swing.table.DefaultTableModel(
	                data,
	                new String [] {"序列号", "设备类型", "使用地点", "报修时间", "报修原因", "维修状态"}
	            ));
	   jt.updateUI() ;                            //提示表格已更改
	   jt.repaint();                              //重绘表格
   	JOptionPane.showMessageDialog(this, "报修成功！！！！","消息",JOptionPane.INFORMATION_MESSAGE);//弹出信息提示对话框
    return;
    }  

}



private void jb_knowActionPerformed(java.awt.event.ActionEvent evt) {
	    
    /*************************************************************************************************
     * 将已经维修成功的设备,和报废的设备删除
     * 这样做的好处是：维修成功或报废的设备只有在用户看到过一次后才删除
     *                便于用户了解自己设备的情况
     * ***********************************************************************************************/
sql = "delete from mend where super_user_Id ='"+ userId+"' And mend_sign = '2' OR mend_sign = '3'";
try {
	 c = new SocketClient(sql);                            //实例化Client对象
	 c.send();                                        //将sql语句发送给服务器端处理
	} catch(Exception e){e.printStackTrace(); } 

}


Vector<String> v_result;
Vector<String> v_eqpId;
Vector<String> v_eqpType;
Vector<String> v_location;
Vector<String> v_jtResult;
private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {
      v_eqpId = new Vector<String>();
      v_eqpType= new Vector<String>();
      v_location= new Vector<String>();
      v_jtResult = new Vector<String>();
      /***********************************************************************************************
       * 查询数据库，
       * 将该用户已经借的设备的设备序列号放到组合框jcb_eqpId里，方便用户对响应设备报修
       * *********************************************************************************************/
    sql = "select borrowed.eqp_Id from borrowed,storage  " +
    		"where super_user_Id = '" + userId +"' And borrowed.eqp_Id = storage.eqp_Id " +
    				"And storage.eqp_mend_sign!= '1' And storage.eqp_abandon_sign != '1'";	 	
    try {
	 c = new SocketClient(sql,1);                            //实例化Client对象
	 c.send();                                        //将sql语句发送给服务器端处理
	 v_result = new Vector<String>();
	 v_result = c.getV_result();	                  //得到查询数据库后的结果
	} catch(Exception e){e.printStackTrace(); }
         
     for(int i = 0;i <v_result.size();i++){
     v_eqpId.add(v_result.get(i));
     jcb_eqp_Id.addItem(v_result.get(i));
     }
     
     
     /*
	     * 查询v_eqpId里每一个设备的类型，和使用地点
	     * 将类型存放到v_eqpType
	     * 将类型存放到v_eqpLocation
	     * 报修原因待update----------------------------------------待修改
	     * 三个向量里的内容一一对应
	     * */
	    for(int i = 0; i < v_eqpId.size();i++){
	    sql = "select room.eqp_location,equipment.eqp_type from room,equipment where room.eqp_Id = equipment.eqp_Id AND room.eqp_Id = '" + v_eqpId.get(i) +"'";	      
	    try {
	    	c = new SocketClient(sql,2);                            //实例化Client对象
	    	c.send();                                        //将sql语句发送给服务器端处理
	    	v_result = new Vector<String>();
	    	v_result = c.getV_result();	                  //得到查询数据库后的结果
	    	} catch(Exception e){e.printStackTrace(); }
	    	System.out.println(v_result);
	    	v_location.add(v_result.get(0));
	    	v_eqpType.add(v_result.get(1));
	     }
	   
	    
	    /*
		 * 将该用户已经报修的信息显示在表单中
		 * */
	     sql = "select mend.eqp_Id,equipment.eqp_type,room.eqp_location,mend.mend_time,mend.mend_reason,mend.mend_sign " +
	     		"from mend,room,equipment " +
	     		"where mend.eqp_Id = room.eqp_Id AND mend.eqp_Id = equipment.eqp_Id " +
	     		"AND  mend.super_user_Id = '"+ userId +"'";
	     
	     try {
		    	c = new SocketClient(sql,6);                            //实例化Client对象
		    	 c.send();                                        //将sql语句发送给服务器端处理
		    	 v_result = new Vector<String>();
		    	 v_result = c.getV_result();	                  //得到查询数据库后的结果
		    	} catch(Exception e){e.printStackTrace(); }
		  int count =0;
		  int rowCount=0;
		  String data[][]= new String[v_result.size()/6][6];
		  while(count<v_result.size()){
			  
		 	for(int j = 0;j < 6;j++){
		 		if(j!=5){data[rowCount][j] = v_result.get(count);}
		 		else{
		 			int state = Integer.parseInt(v_result.get(count));
		 			switch(state) {
		 			case 0 :data[rowCount][j] = "待维修...";break;
		 			case 1 :data[rowCount][j] = "维修状态";break;
		 			case 2 :data[rowCount][j] = "维修成功";break;
		 			case 3 :data[rowCount][j] = "报废，请归库";break;} 
		 			}
		 		v_jtResult.add(v_result.get(count));
		 		count++;	
		 		  }
		 	rowCount++;
		  }
       //更新表单
	   jt.setModel(new javax.swing.table.DefaultTableModel(
	                data,
	                new String [] {"序列号", "设备类型", "使用地点", "报修时间", "报修原因", "维修状态"}
	            ));
}



/*
 * 难点：jComBox的事件处理，
 * 一运行该事件就响应，而且它先与formAncestorAdded的执行，而此时数组v_eqpType,v_eqpLocation 还为空值，故会出现数组越界的错误
 *解决方法：定义一个标志位，以区分jComBox的处理事件是否为第一次执行
 *若是第一次执行，则不进行任何操作
 *否则，将信息显示出来
 **/
int count = 0;
private void jcb_eqp_IdActionPerformed(java.awt.event.ActionEvent evt) {
   if(count ==0){}
   else{
	   str_eqpId = v_eqpId.get(jcb_eqp_Id.getSelectedIndex());
	   str_eqpType = v_eqpType.get(jcb_eqp_Id.getSelectedIndex());
	   str_eqpLocation = v_location.get(jcb_eqp_Id.getSelectedIndex());
	   jtf_eqp_type.setText(str_eqpType);
	   jtf_location.setText(str_eqpLocation);
       }
   count ++;
}
   
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jb_know;
    private javax.swing.JButton jb_ok;
    private javax.swing.JComboBox jcb_eqp_Id;
    private javax.swing.JTable jt;
    private javax.swing.JTextArea jta_reason;
    private javax.swing.JTextField jtf_eqp_type;
    private javax.swing.JTextField jtf_location;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]){
    	JFrame jf = new JFrame();
    	EquipmentRequireMended seqp = new EquipmentRequireMended("1221101");
    	jf.add(seqp);
    	jf.setBounds(10,10,600,600);
    	jf.setVisible(true);
    	
    }

}
